name: Suoritusrekisteri

on:
  workflow_dispatch:
  push:
    paths-ignore:
      - '**.md'

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: Cache local Maven repository
        uses: actions/cache@v2
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-

      - name: Set up JDK 11
        uses: actions/setup-java@v2
        with:
          java-version: '11'
          distribution: 'temurin'

      - name: Install Chrome
        uses: browser-actions/setup-chrome@latest

      - uses: actions/setup-node@v3
        with:
          node-version: 12.9.1
          cache: 'npm'

      - name: Run NPM
        run: |
          npm install bower
          node_modules/bower/bin/bower update
          npm -v
          node -v

      - uses: szenius/set-timezone@v1.0
        with:
          timezoneLinux: "Europe/Helsinki"

      - name: Build with Maven
        run: |
          chrome --version
          mvn clean spotless:check install -B -DargLine="-Dlog4j.configuration=file:./src/test/resources/log4j.properties"

      - uses: actions/cache@v2
        id: restore-build
        with:
          path: |
            target
          key: ${{ github.sha }}

  deploy-container:
    needs: build
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - uses: actions/cache@v2
        id: restore-build
        with:
          path: |
            target
          key: ${{ github.sha }}

      - name: Build Docker container
        shell: bash
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        run: |
          git clone https://github.com/Opetushallitus/ci-tools.git
          source ci-tools/common/setup-tools.sh
          export ARTIFACT_NAME="suoritusrekisteri"
          mv target/suoritusrekisteri*allinone.jar $DOCKER_BUILD_DIR/artifact/${ARTIFACT_NAME}.jar 
          jar xf $DOCKER_BUILD_DIR/artifact/${ARTIFACT_NAME}.jar META-INF/native
          mv META-INF/native $DOCKER_BUILD_DIR/native_libs
          cp -vr src/main/resources/* $DOCKER_BUILD_DIR/config/
          export BASE_IMAGE="baseimage-fatjar-openjdk11:master"
          ./ci-tools/common/pull-image.sh
          ./ci-tools/github-build/build-fatjar.sh $ARTIFACT_NAME
          ./ci-tools/github-build/upload-image.sh $ARTIFACT_NAME