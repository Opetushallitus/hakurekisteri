<?xml version="1.0" encoding="UTF-8"?>
<project name="deploy-to-remote-tomcat" basedir="." default="deploy-to-remote-tomcat" >

    <target name="deploy-to-remote-tomcat">
        <antcall target="deploy-to-remote-tomcat-suoritusrekisteri" />
        <!--antcall target="deploy-to-remote-tomcat-tiedonsiirto" /-->
    </target>

    <target name="deploy-to-remote-tomcat-suoritusrekisteri">
<!--
	deploy to luokka shell command:
	#ant -Dtomcat-host=luokka
-->
        <property name="oph.name" value="suoritusrekisteri"/>
        <property name="tomcat-port" value="8318"/>

        <!--<property name="pom.version" value="LATEST-SNAPSHOT"/>-->
        <property name="pom.version" value="###NOT_DEFINED###"/>
        <property name="tomcat-host" value="###NOT_DEFINED###"/> <!-- default luokka? -->

		<property name="maven.repo" value="${user.home}/.m2/repository"/>
		<property name="tomcat.name" value="tomcat_${oph.name}"/>
		<property name="tomcat.home" value="/data00/oph/${oph.name}/tomcat"/>
		<property name="ssh.keyfile" location="${user.home}/.ssh/id_rsa"/>
		<property name="ssh.keypass" value=""/>

        <echo>hakurekisteri / build.xml</echo>
        <echo>  maven.repo = ${maven.repo}</echo>
        <echo>  tomcat.name = ${tomcat.name}</echo>
        <echo>  tomcat.home = ${tomcat.home}</echo>
        <echo>  oph.name = ${oph.name}</echo>
        <echo>  pom.version = ${pom.version}</echo>

        <echo>Stop Tomcat</echo>
		<sshexec command="/data00/oph/tomcat/ophtomcat ${oph.name} stop"
                 host="${tomcat-host}" username="tomcat" keyfile="${ssh.keyfile}"
                 passphrase="${ssh.keypass}" trust="true" failonerror="false" />

		<echo>Wait Tomcat to stop...</echo>
        <waitfor maxwait="30000" checkevery="500">
            <not>
                <socket server="${tomcat-host}" port="${tomcat-port}" />
            </not>
        </waitfor>
        <echo>Tomcat stopped.</echo>

        <echo>Clean Tomcat</echo>
        <sshexec command="rm -rf ${tomcat.home}/webapps/suoritusrekisteri ${tomcat.home}/work/* ${tomcat.home}/temp/*"
                 host="${tomcat-host}" username="tomcat" keyfile="${ssh.keyfile}"
                 passphrase="${ssh.keypass}" trust="true" failonerror="false" />

        <echo>Copy files to server...</echo>
		<scp todir="tomcat@${tomcat-host}:${tomcat.home}/webapps/"
               keyfile="${ssh.keyfile}" passphrase="${ssh.keypass}" verbose="true">
			
			<!-- deploy lates from local maven repo -->
            <fileset dir="target/scala-2.11/">
                <include name="*.war"/>
            </fileset>
		</scp>

		<echo>unzip apps</echo>
        <sshexec command="
				mkdir ${tomcat.home}/webapps/suoritusrekisteri;

				unzip -qo -d${tomcat.home}/webapps/suoritusrekisteri ${tomcat.home}/webapps/hakurekisteri*.war;

                rm -rf ${tomcat.home}/webapps/hakurekisteri*.war;
				"
                host="${tomcat-host}" username="tomcat" keyfile="${ssh.keyfile}"
                passphrase="${ssh.keypass}" trust="true" failonerror="false" />

		<echo>Remove extra log4j config-files</echo>
		<sshexec command="find ${tomcat.home} -name 'log4j.properties' -exec rm -rf {} \;"
                 host="${tomcat-host}" username="tomcat" keyfile="${ssh.keyfile}"
                 passphrase="${ssh.keypass}" trust="true" failonerror="false" />

        <echo>Change spring-security schema version to 3.2</echo>
        <sshexec command="sed 's/spring-security-3.1.xsd/spring-security.xsd/g' -i /data00/oph/suoritusrekisteri/oph-configuration/security-context-backend.xml"
                 host="${tomcat-host}" username="tomcat" keyfile="${ssh.keyfile}"
                 passphrase="${ssh.keypass}" trust="true" failonerror="false" />
				 
		<echo>Start Tomcat</echo>
		<sshexec command="/data00/oph/tomcat/ophtomcat ${oph.name} start"
                 host="${tomcat-host}" username="tomcat" keyfile="${ssh.keyfile}"
                 passphrase="${ssh.keypass}" trust="true" failonerror="false" />

		<echo>Wait for service urls at http://${tomcat-host}:${tomcat-port}/</echo>
		<waitfor maxwait="300" maxwaitunit="second" checkevery="5" checkeveryunit="second">
    			<http url="http://${tomcat-host}:${tomcat-port}/suoritusrekisteri/buildversion.txt"/>
		</waitfor>
		<fail message="Apps did not come up. Check your log files, fix and try again. Good Luck :-).">
			<condition>
				<not>
					<http url="http://${tomcat-host}:${tomcat-port}/suoritusrekisteri/buildversion.txt" />
				</not>
			</condition>
		</fail>
		
        <echo>Successfully deployed to ${tomcat-host}</echo>
    </target>

</project>
